rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isFarmer() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/farmers/$(request.auth.uid));
    }
    
    function isUser() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // Settings collection for initialization
    match /settings/{document} {
      allow read, write: if true;
    }

    // Products collection rules
    match /products/{productId} {
      allow read: if true;
      allow create: if 
        // Allow system initialization
        (request.resource.data.farmerId == 'system') ||
        // Allow farmers to create their own products
        (isFarmer() && request.resource.data.farmerId == request.auth.uid);
      
      allow update: if 
        // Allow system updates
        (resource.data.farmerId == 'system') ||
        // Allow farmers to update their products
        (isFarmer() && resource.data.farmerId == request.auth.uid);
      
      allow delete: if isFarmer() && resource.data.farmerId == request.auth.uid;
    }

    // Farmer registration rules
    match /farmers/{farmerId} {
      allow read: if true;
      allow create: if 
        isAuthenticated() && 
        request.auth.uid == farmerId &&
        !exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        !exists(/databases/$(database)/documents/farmers/$(request.auth.uid));
      
      allow update: if isAuthenticated() && request.auth.uid == farmerId;
    }

    // User registration rules
    match /users/{userId} {
      allow read: if true;
      allow create: if 
        isAuthenticated() && 
        request.auth.uid == userId &&
        !exists(/databases/$(database)/documents/farmers/$(request.auth.uid)) &&
        !exists(/databases/$(database)/documents/users/$(request.auth.uid));
      
      allow update: if isAuthenticated() && request.auth.uid == userId;
      
      // User's cart
      match /cart/{itemId} {
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
      }
      
      // User's addresses
      match /addresses/{addressId} {
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
      }
      
      // User's orders
      match /orders/{orderId} {
        allow read: if isAuthenticated() && 
          (request.auth.uid == userId || resource.data.farmerId == request.auth.uid);
        allow create: if isAuthenticated() && request.auth.uid == userId;
        allow update: if isAuthenticated() && 
          (request.auth.uid == userId || resource.data.farmerId == request.auth.uid);
      }
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isUser() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isUser() && resource.data.userId == request.auth.uid;
    }
  }
} 